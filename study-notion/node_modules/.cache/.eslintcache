[{"C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Home.jsx":"3","C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Login.jsx":"4","C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Navbar.jsx":"5","C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Signup.jsx":"6","C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Dashboard.jsx":"7","C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\PrivateRoute.jsx":"8","C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Template.jsx":"9","C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\SignupForm.jsx":"10","C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\LoginForm.jsx":"11"},{"size":335,"mtime":1706442115494,"results":"12","hashOfConfig":"13"},{"size":1006,"mtime":1706447875634,"results":"14","hashOfConfig":"13"},{"size":176,"mtime":1685597546000,"results":"15","hashOfConfig":"13"},{"size":425,"mtime":1706447819941,"results":"16","hashOfConfig":"13"},{"size":2076,"mtime":1685597546000,"results":"17","hashOfConfig":"13"},{"size":479,"mtime":1685597546000,"results":"18","hashOfConfig":"13"},{"size":191,"mtime":1685597546000,"results":"19","hashOfConfig":"13"},{"size":266,"mtime":1685597546000,"results":"20","hashOfConfig":"13"},{"size":1878,"mtime":1685597546000,"results":"21","hashOfConfig":"13"},{"size":6103,"mtime":1706529245158,"results":"22","hashOfConfig":"13"},{"size":3002,"mtime":1685597546000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fimg4s",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\index.js",[],[],"C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\App.js",["58"],[],"C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Home.jsx",[],[],"C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Login.jsx",[],[],"C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Navbar.jsx",["59"],[],"C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Signup.jsx",[],[],"C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Dashboard.jsx",[],[],"C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\PrivateRoute.jsx",[],[],"C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\Template.jsx",[],[],"C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\SignupForm.jsx",["60"],[],"import React from \"react\";\nimport { useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SignupForm = (props) => {\n  const setIsLoggedIn = props.setIsLoggedIn;\n\n  const navigate = useNavigate();\n\n  const [showCreatePass, setShowCreatePass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [accountType, setAccountType] = useState(\"student\");\n\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  function changeHandler(event) {\n    setFormData([\n      (prev) => [\n        {\n          ...prev,\n          [event.target.name]: event.target.value,\n        },\n      ],\n    ]);\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    if (formData.password != formData.confirmPassword) {\n      toast.error(\"Passwords do not match\");\n      return;\n    }\n\n    setIsLoggedIn(true);\n    toast.success(\"Account Create\");\n    const accountData = {\n      ...formData,\n    };\n    console.log(accountData);\n\n    navigate(\"/dashboard\");\n  }\n\n  return (\n    <div>\n      <div className=\"flex bg-richblack-800 p-1 gap-x-1 rounded-full max-w-max\">\n        <button\n          onclick={() => setAccountType(\"student\")}\n          className={`${\n            accountType === \"student\"\n              ? \"bg-richblack-900 text-richblack-5\"\n              : \"bg-transparent text-richblack-200 \"\n          } py-2 px-5 rounded-full transition-all`}\n        >\n          Student\n        </button>\n        <button\n          onclick={() => setAccountType(\"instructor\")}\n          className={`${\n            accountType === \"instructor\"\n              ? \"bg-richblack-900 text-richblack-5\"\n              : \"bg-transparent text-richblack-200 \"\n          } py-2 px-5 rounded-full transition-all`}\n        >\n          Instructor\n        </button>\n      </div>\n\n      <form onSubmit={submitHandler}>\n        <div className=\"flex gap-x-4\">\n          <label htmlFor=\"\" className=\"w-full\">\n            <p className=\"text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]\">\n              First Name <sup className=\"text-pink-200\">*</sup>\n            </p>\n            <input\n              type=\"text\"\n              required\n              placeholder=\"Enter First Name\"\n              onChange={changeHandler}\n              value={FormData.firstName}\n              name=\"firstName\"\n              className=\"bg-richblack-800 rounded-[0.75rem] w-full p-[12px] text-richblack-5\"\n            />\n          </label>\n\n          <label htmlFor=\"\" className=\"w-full\">\n            <p className=\"text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]\">\n              Last Name <sup className=\"text-pink-200\">*</sup>\n            </p>\n            <input\n              type=\"text\"\n              required\n              placeholder=\"Enter Last Name\"\n              onChange={changeHandler}\n              value={FormData.lastName}\n              name=\"lastName\"\n              className=\"bg-richblack-800 rounded-[0.75rem] w-full p-[12px] text-richblack-5\"\n            />\n          </label>\n        </div>\n\n        <label htmlFor=\"\" className=\"w-full\">\n          <p className=\"text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]\">\n            Email Address\n            <sup className=\"text-pink-200\">*</sup>\n          </p>\n\n          <input\n            type=\"email\"\n            required\n            placeholder=\"Enter your email address\"\n            value={formData.email}\n            onChange={changeHandler}\n            className=\"bg-richblack-800 rounded-[0.75rem] w-full p-[12px] text-richblack-5\"\n            name=\"email\"\n          />\n        </label>\n\n        <div className=\"flex gap-x-4\">\n          <label htmlFor=\"w-full relative\">\n            <p className=\"text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]\">\n              Create Password\n              <sup className=\"text-pink-200\">*</sup>\n            </p>\n\n            <input\n              type={showCreatePass ? \"text\" : \"password\"}\n              required\n              placeholder=\"Enter Password\"\n              onChange={changeHandler}\n              value={formData.password}\n              name=\"password\"\n              className=\"bg-richblack-800 rounded-[0.75rem] w-full p-[12px] text-richblack-5\"\n            />\n            <span\n              onClick={() => setShowCreatePass(!showCreatePass)}\n              className=\"absolute right-3 top-[38px] cursor-pointer z-10\"\n            >\n              {showCreatePass ? (\n                <AiOutlineEyeInvisible fontSize={24} fill=\"#AFB2BF\" />\n              ) : (\n                <AiOutlineEye fontSize={24} fill=\"#AFB2BF\" />\n              )}\n            </span>\n          </label>\n\n          <label htmlFor=\"\" className=\"w-full relative\">\n            <p className=\"text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]\">\n              Confirm Password\n              <sup className=\"text-pink-200\">*</sup>\n            </p>\n\n            <input\n              type={showConfirmPass ? \"text\" : \"password\"}\n              required\n              placeholder=\"Confirm Password\"\n              onChange={changeHandler}\n              value={formData.confirmPassword}\n              name=\"confirmPassword\"\n              className=\"bg-richblack-800 rounded-[0.75rem] w-full p-[12px] text-richblack-5\"\n            />\n\n            <span\n              onClick={() => setShowConfirmPass(!showConfirmPass)}\n              className=\"absolute right-3 top-[38px] cursor-pointer z-10\"\n            >\n              {showConfirmPass ? (\n                <AiOutlineEyeInvisible fontSize={24} fill=\"#AFB2BF\" />\n              ) : (\n                <AiOutlineEye fontSize={24} fill=\"#AFB2BF\" />\n              )}\n            </span>\n          </label>\n        </div>\n\n        <button className=\"bg-yellow-50 py-[8px] px-[12px] rounded-[8px] mt-6 font-medium text-richblack-900 w-full\">\n          Create Account\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignupForm;\n","C:\\Users\\HP\\Desktop\\Practice\\React_Intermediate\\study-notion\\src\\Components\\LoginForm.jsx",[],[],{"ruleId":"61","severity":1,"message":"62","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":20},{"ruleId":"65","severity":1,"message":"66","line":12,"column":9,"nodeType":"67","endLine":12,"endColumn":66},{"ruleId":"68","severity":1,"message":"69","line":37,"column":27,"nodeType":"70","messageId":"71","endLine":37,"endColumn":29},"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]